{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/FileUploader.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useRef, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Upload, FileText, X } from 'lucide-react';\n\ninterface FileUploaderProps {\n  fileType: 'xlsx' | 'csv' | 'both';\n  multiple?: boolean;\n  onFileLoaded: (files: File | File[]) => void;\n  label: string;\n  description?: string;\n  expectedCount?: number;\n  loading?: boolean;\n}\n\nexport default function FileUploader({\n  fileType,\n  multiple = false,\n  onFileLoaded,\n  label,\n  description,\n  expectedCount,\n  loading = false\n}: FileUploaderProps) {\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [error, setError] = useState<string>('');\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(event.target.files || []);\n    setError('');\n\n    if (files.length === 0) return;\n\n    // Validar tipo de archivo\n    let validExtensions: string[] = [];\n    if (fileType === 'xlsx') {\n      validExtensions = ['.xlsx', '.xls'];\n    } else if (fileType === 'csv') {\n      validExtensions = ['.csv'];\n    } else if (fileType === 'both') {\n      validExtensions = ['.xlsx', '.xls', '.csv'];\n    }\n    \n    const invalidFiles = files.filter(file => \n      !validExtensions.some(ext => file.name.toLowerCase().endsWith(ext))\n    );\n\n    if (invalidFiles.length > 0) {\n      setError(`Tipo de archivo inválido. Solo se permiten archivos ${validExtensions.join(', ')}`);\n      return;\n    }\n\n    // Validar cantidad de archivos si se especifica\n    if (expectedCount && files.length !== expectedCount) {\n      setError(`Se esperan exactamente ${expectedCount} archivos, pero se seleccionaron ${files.length}`);\n      return;\n    }\n\n    setSelectedFiles(files);\n    \n    // Llamar al callback\n    if (multiple) {\n      onFileLoaded(files);\n    } else {\n      onFileLoaded(files[0]);\n    }\n  };\n\n  const removeFile = (index: number) => {\n    const newFiles = selectedFiles.filter((_, i) => i !== index);\n    setSelectedFiles(newFiles);\n    \n    // Notify parent component of the change\n    if (newFiles.length === 0) {\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n      // Notify parent that no files are selected\n      if (multiple) {\n        onFileLoaded([]);\n      }\n    } else {\n      // Notify parent of the updated file list\n      if (multiple) {\n        onFileLoaded(newFiles);\n      } else {\n        onFileLoaded(newFiles[0]);\n      }\n    }\n  };\n\n  const clearAll = () => {\n    setSelectedFiles([]);\n    setError('');\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n    \n    // Notify parent component that files have been cleared\n    if (multiple) {\n      onFileLoaded([]);\n    }\n  };\n\n  let acceptedTypes = '';\n  if (fileType === 'xlsx') {\n    acceptedTypes = '.xlsx,.xls';\n  } else if (fileType === 'csv') {\n    acceptedTypes = '.csv';\n  } else if (fileType === 'both') {\n    acceptedTypes = '.xlsx,.xls,.csv';\n  }\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Upload className=\"h-5 w-5\" />\n          {label}\n        </CardTitle>\n        {description && (\n          <CardDescription>{description}</CardDescription>\n        )}\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"flex items-center gap-4\">\n          <Button\n            onClick={() => fileInputRef.current?.click()}\n            disabled={loading}\n            variant=\"outline\"\n            className=\"flex items-center gap-2\"\n          >\n            <Upload className=\"h-4 w-4\" />\n            {loading ? 'Procesando...' : 'Seleccionar Archivos'}\n          </Button>\n          \n          {selectedFiles.length > 0 && (\n            <Button\n              onClick={clearAll}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-muted-foreground\"\n            >\n              Limpiar\n            </Button>\n          )}\n        </div>\n\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          accept={acceptedTypes}\n          multiple={multiple}\n          onChange={handleFileSelect}\n          className=\"hidden\"\n        />\n\n        {error && (\n          <Alert variant=\"destructive\">\n            <AlertDescription>{error}</AlertDescription>\n          </Alert>\n        )}\n\n        {selectedFiles.length > 0 && (\n          <div className=\"space-y-2\">\n            <p className=\"text-sm font-medium\">\n              Archivos seleccionados ({selectedFiles.length}):\n            </p>\n            <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n              {selectedFiles.map((file, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center justify-between p-2 bg-muted rounded-md\"\n                >\n                  <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                    <FileText className=\"h-4 w-4 text-muted-foreground flex-shrink-0\" />\n                    <span className=\"text-sm truncate\" title={file.name}>\n                      {file.name}\n                    </span>\n                    <span className=\"text-xs text-muted-foreground flex-shrink-0\">\n                      ({(file.size / 1024).toFixed(1)} KB)\n                    </span>\n                  </div>\n                  <Button\n                    onClick={() => removeFile(index)}\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-6 w-6 p-0 flex-shrink-0\"\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {expectedCount && (\n          <p className=\"text-xs text-muted-foreground\">\n            * Se requieren exactamente {expectedCount} archivos CSV\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 652, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 790, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DataVisualizer.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Download, AlertTriangle, CheckCircle } from 'lucide-react';\nimport { ReplenishmentResult } from '@/lib/fileUtils';\n\ninterface DataVisualizerProps {\n  data: ReplenishmentResult[] | any[];\n  title: string;\n  description?: string;\n  onExport?: () => void;\n  loading?: boolean;\n  type?: 'template' | 'results';\n}\n\nexport default function DataVisualizer({\n  data,\n  title,\n  description,\n  onExport,\n  loading = false,\n  type = 'template'\n}: DataVisualizerProps) {\n  if (loading) {\n    return (\n      <Card className=\"w-full\">\n        <CardHeader>\n          <CardTitle>{title}</CardTitle>\n          {description && <CardDescription>{description}</CardDescription>}\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center p-8\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n            <span className=\"ml-2\">Procesando datos...</span>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Card className=\"w-full\">\n        <CardHeader>\n          <CardTitle>{title}</CardTitle>\n          {description && <CardDescription>{description}</CardDescription>}\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center p-8 text-muted-foreground\">\n            <p>No hay datos para mostrar</p>\n            <p className=\"text-sm mt-2\">Carga los archivos necesarios para ver los resultados</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const renderTemplateData = () => {\n    const headers = Object.keys(data[0] || {});\n    \n    return (\n      <div className=\"overflow-x-auto\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              {headers.map((header, index) => (\n                <TableHead key={index} className=\"whitespace-nowrap\">\n                  {header.charAt(0).toUpperCase() + header.slice(1)}\n                </TableHead>\n              ))}\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {data.slice(0, 50).map((row, index) => (\n              <TableRow key={index}>\n                {headers.map((header, cellIndex) => (\n                  <TableCell key={cellIndex} className=\"whitespace-nowrap\">\n                    {typeof row[header] === 'number' \n                      ? row[header].toLocaleString() \n                      : row[header] || '-'\n                    }\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        {data.length > 50 && (\n          <div className=\"text-center p-4 text-sm text-muted-foreground\">\n            Mostrando 50 de {data.length} registros\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderResultsData = () => {\n    const results = data as ReplenishmentResult[];\n    const requiereReposicion = results.filter(item => item.requiereReposicion).length;\n    const stockBajo = results.filter(item => item.diasParaAgotarse <= 30).length;\n\n    return (\n      <div className=\"space-y-4\">\n        {/* Resumen */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">{requiereReposicion}</p>\n                  <p className=\"text-sm text-muted-foreground\">Requieren Reposición</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"h-5 w-5 text-red-500\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">{stockBajo}</p>\n                  <p className=\"text-sm text-muted-foreground\">Stock Bajo (≤30 días)</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">{results.length - requiereReposicion}</p>\n                  <p className=\"text-sm text-muted-foreground\">Stock Adecuado</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Tabla de resultados */}\n        <div className=\"overflow-x-auto\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Tienda</TableHead>\n                <TableHead>Código</TableHead>\n                <TableHead>Artículo</TableHead>\n                <TableHead>Stock Actual</TableHead>\n                <TableHead>Días para Agotarse</TableHead>\n                <TableHead>Fecha Reposición</TableHead>\n                <TableHead>Origen</TableHead>\n                <TableHead>Estado</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {results.map((item, index) => (\n                <TableRow key={index} className={item.requiereReposicion ? 'bg-red-50 dark:bg-red-950/20' : ''}>\n                  <TableCell className=\"text-sm\">\n                    {item.tienda || '-'}\n                  </TableCell>\n                  <TableCell className=\"font-mono text-sm\">\n                    {item.codigo || '-'}\n                  </TableCell>\n                  <TableCell className=\"max-w-xs truncate\" title={item.articulo}>\n                    {item.articulo || '-'}\n                  </TableCell>\n                  <TableCell>\n                    <span className={item.stockActual <= (item.stockMinimo || 0) ? 'text-red-600 font-semibold' : ''}>\n                      {item.stockActual.toLocaleString()}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge variant={\n                      item.diasParaAgotarse <= 7 ? 'destructive' :\n                      item.diasParaAgotarse <= 30 ? 'secondary' : 'outline'\n                    }>\n                      {item.diasParaAgotarse === 999 ? '∞' : `${item.diasParaAgotarse}d`}\n                    </Badge>\n                  </TableCell>\n                  <TableCell className=\"whitespace-nowrap\">\n                    {item.fechaReposicion}\n                  </TableCell>\n                  <TableCell>\n                    <Badge variant={item.origen === 'China' ? 'outline' : 'secondary'}>\n                      {item.origen} ({item.diasReposicion}d)\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    {item.requiereReposicion ? (\n                      <Badge variant=\"destructive\">\n                        <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                        Reponer\n                      </Badge>\n                    ) : (\n                      <Badge variant=\"outline\">\n                        <CheckCircle className=\"h-3 w-3 mr-1\" />\n                        OK\n                      </Badge>\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle>{title}</CardTitle>\n            {description && <CardDescription>{description}</CardDescription>}\n          </div>\n          {onExport && data.length > 0 && (\n            <Button onClick={onExport} className=\"flex items-center gap-2\">\n              <Download className=\"h-4 w-4\" />\n              Exportar XLSX\n            </Button>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent>\n        {type === 'results' ? renderResultsData() : renderTemplateData()}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1544, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/fileUtils.ts"],"sourcesContent":["import * as XLSX from 'xlsx';\nimport Papa from 'papaparse';\n\nexport interface InventoryItem {\n  // Campos principales\n  tienda?: string;\n  linea?: string;\n  codigo?: string;\n  articulo?: string;\n  semana?: string;\n  fechaInicio?: string;\n  inventario?: number;\n  fechaFinal?: string;\n  stock?: number;\n  ventasSemanales?: number;\n  semana2?: string;\n  fechaFinal2?: string;\n  stockFinal2?: number;\n  ventasSemanales2?: number;\n  semana3?: string;\n  fechaFinal3?: string;\n  stockFinal3?: number;\n  ventasSemanales3?: number;\n  semana4?: string;\n  fechaFinal4?: string;\n  stockFinal4?: number;\n  \n  // Campos calculados\n  ventaDiaria?: number;\n  ventaSemanal?: number;\n  proveedor?: string;\n  stockMinimo?: number;\n  [key: string]: any;\n}\n\nexport interface ReplenishmentResult extends InventoryItem {\n  stockActual: number;\n  diasParaAgotarse: number;\n  fechaReposicion: string;\n  diasReposicion: number;\n  origen: 'China' | 'Miami';\n  requiereReposicion: boolean;\n}\n\n// Detectar automáticamente el delimitador del CSV\nexport function detectCSVDelimiter(csvText: string): string {\n  const delimiters = [',', ';', '\\t', '|'];\n  const sampleLines = csvText.split('\\n').slice(0, 5).join('\\n');\n  \n  let bestDelimiter = ',';\n  let maxColumns = 0;\n  \n  for (const delimiter of delimiters) {\n    const result = Papa.parse(sampleLines, {\n      delimiter,\n      header: false,\n      skipEmptyLines: true\n    });\n    \n    if (result.data.length > 0) {\n      const avgColumns = result.data.reduce((sum: number, row: any) => sum + row.length, 0) / result.data.length;\n      if (avgColumns > maxColumns && avgColumns > 1) {\n        maxColumns = avgColumns;\n        bestDelimiter = delimiter;\n      }\n    }\n  }\n  \n  return bestDelimiter;\n}\n\n// Parsear archivo XLSX\nexport async function parseXLSX(file: File): Promise<InventoryItem[]> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    \n    reader.onload = (e) => {\n      try {\n        const data = new Uint8Array(e.target?.result as ArrayBuffer);\n        const workbook = XLSX.read(data, { type: 'array' });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n        \n        if (jsonData.length < 2) {\n          reject(new Error('El archivo XLSX debe tener al menos una fila de encabezados y una fila de datos'));\n          return;\n        }\n        \n        const headers = jsonData[0] as string[];\n        const rows = jsonData.slice(1) as any[][];\n        \n        const parsedData: InventoryItem[] = rows.map(row => {\n          const item: InventoryItem = {};\n          headers.forEach((header, index) => {\n            const key = header.toLowerCase().trim().replace(/\\s+/g, '');\n            let value = row[index];\n            \n            // Convertir números si es necesario\n            if (typeof value === 'string' && !isNaN(Number(value)) && value.trim() !== '') {\n              value = Number(value);\n            }\n            \n            // Mapear campos específicos de la plantilla\n            if (key.includes('tienda')) {\n              item.tienda = value;\n            } else if (key.includes('linea') || key.includes('línea')) {\n              item.linea = value;\n            } else if (key.includes('codigo') || key.includes('código')) {\n              item.codigo = value;\n            } else if (key.includes('articulo') || key.includes('artículo')) {\n              item.articulo = value;\n            } else if (key.includes('semana') && !key.includes('ventas')) {\n              if (key.includes('2')) item.semana2 = value;\n              else if (key.includes('3')) item.semana3 = value;\n              else if (key.includes('4')) item.semana4 = value;\n              else item.semana = value;\n            } else if (key.includes('fechainicio')) {\n              item.fechaInicio = value;\n            } else if (key.includes('inventario')) {\n              item.inventario = Number(value) || 0;\n            } else if (key.includes('fechafinal')) {\n              if (key.includes('2')) item.fechaFinal2 = value;\n              else if (key.includes('3')) item.fechaFinal3 = value;\n              else item.fechaFinal = value;\n            } else if (key.includes('stock')) {\n              if (key.includes('final2')) item.stockFinal2 = Number(value) || 0;\n              else if (key.includes('final3')) item.stockFinal3 = Number(value) || 0;\n              else if (key.includes('final4')) item.stockFinal4 = Number(value) || 0;\n              else item.stock = Number(value) || 0;\n            } else if (key.includes('ventassemanales')) {\n              if (key.includes('2')) item.ventasSemanales2 = Number(value) || 0;\n              else if (key.includes('3')) item.ventasSemanales3 = Number(value) || 0;\n              else item.ventasSemanales = Number(value) || 0;\n            } else {\n              // Guardar cualquier otro campo\n              item[key] = value;\n            }\n          });\n          \n          // Calcular campos derivados\n          const ventaTotal = (item.ventasSemanales || 0) + (item.ventasSemanales2 || 0) + (item.ventasSemanales3 || 0);\n          item.ventaSemanal = ventaTotal / (ventaTotal > 0 ? 3 : 1); // Promedio de ventas semanales\n          item.ventaDiaria = item.ventaSemanal ? item.ventaSemanal / 7 : 0;\n          \n          // Determinar proveedor basado en código o tienda\n          if (item.codigo && (item.codigo.toString().includes('CN') || item.tienda?.toString().toLowerCase().includes('china'))) {\n            item.proveedor = 'China';\n          } else {\n            item.proveedor = 'Miami';\n          }\n          \n          // Stock mínimo basado en ventas\n          item.stockMinimo = Math.ceil((item.ventaDiaria || 1) * 14); // 2 semanas de stock mínimo\n          \n          return item;\n        });\n        \n        \n        resolve(parsedData.filter(item => item.codigo || item.articulo));\n      } catch (error) {\n        reject(new Error(`Error al procesar el archivo XLSX: ${error}`));\n      }\n    };\n    \n    reader.onerror = () => reject(new Error('Error al leer el archivo'));\n    reader.readAsArrayBuffer(file);\n  });\n}\n\n// Parsear archivo CSV con detección automática de delimitador\nexport async function parseCSV(file: File): Promise<InventoryItem[]> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    \n    reader.onload = (e) => {\n      try {\n        const csvText = e.target?.result as string;\n        const delimiter = detectCSVDelimiter(csvText);\n        \n        Papa.parse(csvText, {\n          delimiter,\n          header: true,\n          skipEmptyLines: true,\n          transformHeader: (header: string) => header.toLowerCase().trim(),\n          complete: (results) => {\n            if (results.errors.length > 0) {\n              console.warn('Advertencias al parsear CSV:', results.errors);\n            }\n            \n            const parsedData: InventoryItem[] = results.data.map((row: any) => {\n              const item: InventoryItem = {};\n              \n            Object.keys(row).forEach(originalKey => {\n                const key = originalKey.toLowerCase().trim().replace(/\\s+/g, '');\n                let value = row[originalKey];\n                \n                // Convertir números si es necesario\n                if (typeof value === 'string' && !isNaN(Number(value)) && value.trim() !== '') {\n                  value = Number(value);\n                }\n                \n                // Mapear campos específicos de la plantilla (igual que en XLSX)\n                if (key.includes('tienda')) {\n                  item.tienda = value;\n                } else if (key.includes('linea') || key.includes('línea')) {\n                  item.linea = value;\n                } else if (key.includes('codigo') || key.includes('código')) {\n                  item.codigo = value;\n                } else if (key.includes('articulo') || key.includes('artículo')) {\n                  item.articulo = value;\n                } else if (key.includes('semana') && !key.includes('ventas')) {\n                  if (key.includes('2')) item.semana2 = value;\n                  else if (key.includes('3')) item.semana3 = value;\n                  else if (key.includes('4')) item.semana4 = value;\n                  else item.semana = value;\n                } else if (key.includes('fechainicio')) {\n                  item.fechaInicio = value;\n                } else if (key.includes('inventario')) {\n                  item.inventario = Number(value) || 0;\n                } else if (key.includes('fechafinal')) {\n                  if (key.includes('2')) item.fechaFinal2 = value;\n                  else if (key.includes('3')) item.fechaFinal3 = value;\n                  else item.fechaFinal = value;\n                } else if (key.includes('stock')) {\n                  if (key.includes('final2')) item.stockFinal2 = Number(value) || 0;\n                  else if (key.includes('final3')) item.stockFinal3 = Number(value) || 0;\n                  else if (key.includes('final4')) item.stockFinal4 = Number(value) || 0;\n                  else item.stock = Number(value) || 0;\n                } else if (key.includes('ventassemanales')) {\n                  if (key.includes('2')) item.ventasSemanales2 = Number(value) || 0;\n                  else if (key.includes('3')) item.ventasSemanales3 = Number(value) || 0;\n                  else item.ventasSemanales = Number(value) || 0;\n                } else {\n                  // Guardar cualquier otro campo\n                  item[key] = value;\n                }\n              });\n              \n              // Calcular campos derivados (igual que en XLSX)\n              const ventaTotal = (item.ventasSemanales || 0) + (item.ventasSemanales2 || 0) + (item.ventasSemanales3 || 0);\n              item.ventaSemanal = ventaTotal / (ventaTotal > 0 ? 3 : 1);\n              item.ventaDiaria = item.ventaSemanal ? item.ventaSemanal / 7 : 0;\n              \n              // Determinar proveedor\n              if (item.codigo && (item.codigo.toString().includes('CN') || item.tienda?.toString().toLowerCase().includes('china'))) {\n                item.proveedor = 'China';\n              } else {\n                item.proveedor = 'Miami';\n              }\n              \n              // Stock mínimo\n              item.stockMinimo = Math.ceil((item.ventaDiaria || 1) * 14);\n              \n              return item;\n            });\n            \n            \n            resolve(parsedData.filter(item => item.codigo || item.articulo));\n          },\n          error: (error: any) => {\n            reject(new Error(`Error al procesar el archivo CSV: ${error.message}`));\n          }\n        });\n      } catch (error) {\n        reject(new Error(`Error al leer el archivo CSV: ${error}`));\n      }\n    };\n    \n    reader.onerror = () => reject(new Error('Error al leer el archivo'));\n    reader.readAsText(file, 'UTF-8');\n  });\n}\n\n// Calcular fechas de reposición\nexport function calculateReplenishment(\n  templateData: InventoryItem[],\n  csvDayOneData: InventoryItem[][],\n  csvClosureData: InventoryItem[][]\n): ReplenishmentResult[] {\n  const leadTimes = { china: 70, miami: 15 };\n  const results: ReplenishmentResult[] = [];\n  \n  templateData.forEach(templateItem => {\n    // Buscar el item en los datos de inventario\n    const dayOneItem = csvDayOneData.flat().find(item => \n      item.codigo === templateItem.codigo || item.articulo === templateItem.articulo\n    );\n    \n    const closureItem = csvClosureData.flat().find(item => \n      item.codigo === templateItem.codigo || item.articulo === templateItem.articulo\n    );\n    \n    // Usar el stock más reciente disponible\n    const stockActual = closureItem?.stock || \n                       closureItem?.stockFinal4 || \n                       closureItem?.stockFinal3 || \n                       closureItem?.stockFinal2 || \n                       templateItem.stock || \n                       templateItem.inventario || 0;\n    \n    const ventaDiaria = templateItem.ventaDiaria || 1; // Ya calculado en el parseo\n    const stockMinimo = templateItem.stockMinimo || Math.ceil(ventaDiaria * 14); // 2 semanas\n    const diasParaAgotarse = ventaDiaria > 0 ? Math.floor(stockActual / ventaDiaria) : 999;\n    \n    // Determinar si requiere reposición\n    const requiereReposicion = stockActual <= stockMinimo || diasParaAgotarse <= 30;\n    \n    // Determinar origen basado en el proveedor ya calculado\n    let origen: 'China' | 'Miami' = templateItem.proveedor === 'China' ? 'China' : 'Miami';\n    let diasReposicion = origen === 'China' ? leadTimes.china : leadTimes.miami;\n    \n    // Si es muy urgente, forzar Miami\n    if (diasParaAgotarse <= 15 && origen === 'China') {\n      origen = 'Miami';\n      diasReposicion = leadTimes.miami;\n    }\n    \n    // Calcular fecha de reposición\n    const fechaReposicion = new Date();\n    fechaReposicion.setDate(fechaReposicion.getDate() + diasReposicion);\n    \n    const result: ReplenishmentResult = {\n      ...templateItem,\n      stockActual,\n      diasParaAgotarse,\n      fechaReposicion: fechaReposicion.toLocaleDateString('es-ES'),\n      diasReposicion,\n      origen,\n      requiereReposicion\n    };\n    \n    results.push(result);\n  });\n  \n  // Ordenar por prioridad (items que requieren reposición primero, luego por días para agotarse)\n  return results.sort((a, b) => {\n    if (a.requiereReposicion && !b.requiereReposicion) return -1;\n    if (!a.requiereReposicion && b.requiereReposicion) return 1;\n    return a.diasParaAgotarse - b.diasParaAgotarse;\n  });\n}\n\n// Función para manejar archivos mixtos (CSV y XLSX)\nexport async function parseFile(file: File): Promise<InventoryItem[]> {\n  const fileName = file.name.toLowerCase();\n  \n  if (fileName.endsWith('.xlsx') || fileName.endsWith('.xls')) {\n    return await parseXLSX(file);\n  } else if (fileName.endsWith('.csv')) {\n    return await parseCSV(file);\n  } else {\n    throw new Error(`Tipo de archivo no soportado: ${file.name}`);\n  }\n}\n\n// Exportar a XLSX\nexport function exportToXLSX(data: ReplenishmentResult[], filename: string = 'reposicion_inventario.xlsx') {\n  try {\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Reposición');\n    \n    // Ajustar ancho de columnas\n    const colWidths = [\n      { wch: 10 }, // tienda\n      { wch: 15 }, // codigo\n      { wch: 30 }, // articulo\n      { wch: 12 }, // stockActual\n      { wch: 15 }, // diasParaAgotarse\n      { wch: 15 }, // fechaReposicion\n      { wch: 12 }, // diasReposicion\n      { wch: 10 }, // origen\n      { wch: 15 }, // requiereReposicion\n    ];\n    worksheet['!cols'] = colWidths;\n    \n    XLSX.writeFile(workbook, filename);\n  } catch (error) {\n    throw new Error(`Error al exportar archivo: ${error}`);\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1865, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Separator } from '@/components/ui/separator';\nimport { Calculator, FileSpreadsheet, TrendingUp } from 'lucide-react';\nimport FileUploader from '@/components/FileUploader';\nimport DataVisualizer from '@/components/DataVisualizer';\nimport { \n  parseXLSX, \n  parseCSV, \n  parseFile,\n  calculateReplenishment, \n  exportToXLSX,\n  InventoryItem,\n  ReplenishmentResult \n} from '@/lib/fileUtils';\n\nexport default function InventoryPerformanceApp() {\n  // Estados para los datos\n  const [templateData, setTemplateData] = useState<InventoryItem[]>([]);\n  const [csvDayOneData, setCsvDayOneData] = useState<InventoryItem[][]>([]);\n  const [csvClosureData, setCsvClosureData] = useState<InventoryItem[][]>([]);\n  const [calculatedResults, setCalculatedResults] = useState<ReplenishmentResult[]>([]);\n  const [previewResults, setPreviewResults] = useState<ReplenishmentResult[]>([]);\n  \n  // Estados para la UI\n  const [loading, setLoading] = useState({\n    template: false,\n    dayOne: false,\n    closure: false,\n    calculating: false,\n    previewing: false\n  });\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [showPreview, setShowPreview] = useState<boolean>(false);\n\n  // Limpiar mensajes después de un tiempo\n  const clearMessages = () => {\n    setTimeout(() => {\n      setError('');\n      setSuccess('');\n    }, 5000);\n  };\n\n  // Manejar carga de plantilla XLSX\n  const handleTemplateUpload = async (file: File | File[]) => {\n    const actualFile = Array.isArray(file) ? file[0] : file;\n    \n    if (!actualFile) {\n      setTemplateData([]);\n      return;\n    }\n\n    setLoading(prev => ({ ...prev, template: true }));\n    setError('');\n    \n    try {\n      const data = await parseFile(actualFile); // Usar parseFile para manejar XLSX y CSV\n      setTemplateData(data);\n      setSuccess(`Plantilla cargada exitosamente: ${data.length} productos`);\n      clearMessages();\n    } catch (err: any) {\n      setError(`Error al cargar la plantilla: ${err.message}`);\n      clearMessages();\n    } finally {\n      setLoading(prev => ({ ...prev, template: false }));\n    }\n  };\n\n  // Manejar carga de archivos del día 1 (CSV o XLSX)\n  const handleDayOneUpload = async (files: File[]) => {\n    // If no files, clear the data\n    if (files.length === 0) {\n      setCsvDayOneData([]);\n      return;\n    }\n\n    setLoading(prev => ({ ...prev, dayOne: true }));\n    setError('');\n    \n    try {\n      const parsedData: InventoryItem[][] = [];\n      \n      for (const file of files) {\n        const data = await parseFile(file); // Usa parseFile para manejar CSV y XLSX\n        parsedData.push(data);\n      }\n      \n      setCsvDayOneData(parsedData);\n      const totalItems = parsedData.reduce((sum, data) => sum + data.length, 0);\n      setSuccess(`Inventarios del día 1 cargados: ${files.length} archivos, ${totalItems} productos`);\n      clearMessages();\n    } catch (err: any) {\n      setError(`Error al cargar inventarios del día 1: ${err.message}`);\n      clearMessages();\n    } finally {\n      setLoading(prev => ({ ...prev, dayOne: false }));\n    }\n  };\n\n  // Manejar carga de archivos de cierre (CSV o XLSX)\n  const handleClosureUpload = async (files: File[]) => {\n    // If no files, clear the data\n    if (files.length === 0) {\n      setCsvClosureData([]);\n      return;\n    }\n\n    setLoading(prev => ({ ...prev, closure: true }));\n    setError('');\n    \n    try {\n      const parsedData: InventoryItem[][] = [];\n      \n      for (const file of files) {\n        const data = await parseFile(file); // Usa parseFile para manejar CSV y XLSX\n        parsedData.push(data);\n      }\n      \n      setCsvClosureData(parsedData);\n      const totalItems = parsedData.reduce((sum, data) => sum + data.length, 0);\n      setSuccess(`Inventarios de cierre cargados: ${files.length} archivos, ${totalItems} productos`);\n      clearMessages();\n    } catch (err: any) {\n      setError(`Error al cargar inventarios de cierre: ${err.message}`);\n      clearMessages();\n    } finally {\n      setLoading(prev => ({ ...prev, closure: false }));\n    }\n  };\n\n  // Generar previsualización\n  const handleGeneratePreview = async () => {\n    if (templateData.length === 0) {\n      setError('Por favor, carga primero la plantilla XLSX');\n      clearMessages();\n      return;\n    }\n\n    setLoading(prev => ({ ...prev, previewing: true }));\n    setError('');\n\n    try {\n      // Generar previsualización con datos limitados (primeros 10 items)\n      const limitedTemplate = templateData.slice(0, 10);\n      const results = calculateReplenishment(limitedTemplate, csvDayOneData, csvClosureData);\n      setPreviewResults(results);\n      setShowPreview(true);\n      setSuccess(`Previsualización generada: ${results.length} productos de muestra`);\n      clearMessages();\n    } catch (err: any) {\n      setError(`Error al generar previsualización: ${err.message}`);\n      clearMessages();\n    } finally {\n      setLoading(prev => ({ ...prev, previewing: false }));\n    }\n  };\n\n  // Calcular reposición completa\n  const handleCalculateReplenishment = async () => {\n    if (templateData.length === 0) {\n      setError('Por favor, carga primero la plantilla XLSX');\n      clearMessages();\n      return;\n    }\n\n    if (csvDayOneData.length !== 6) {\n      setError('Por favor, carga exactamente 6 archivos CSV para inventarios del día 1');\n      clearMessages();\n      return;\n    }\n\n    if (csvClosureData.length !== 6) {\n      setError('Por favor, carga exactamente 6 archivos CSV para inventarios de cierre');\n      clearMessages();\n      return;\n    }\n\n    setLoading(prev => ({ ...prev, calculating: true }));\n    setError('');\n\n    try {\n      const results = calculateReplenishment(templateData, csvDayOneData, csvClosureData);\n      setCalculatedResults(results);\n      setShowPreview(false); // Ocultar previsualización al mostrar resultados completos\n      setSuccess(`Cálculo completado: ${results.filter(r => r.requiereReposicion).length} productos requieren reposición`);\n      clearMessages();\n    } catch (err: any) {\n      setError(`Error al calcular reposición: ${err.message}`);\n      clearMessages();\n    } finally {\n      setLoading(prev => ({ ...prev, calculating: false }));\n    }\n  };\n\n  // Exportar resultados\n  const handleExportResults = () => {\n    if (calculatedResults.length === 0) {\n      setError('No hay resultados para exportar');\n      clearMessages();\n      return;\n    }\n\n    try {\n      exportToXLSX(calculatedResults, 'reposicion_inventario.xlsx');\n      setSuccess('Archivo exportado exitosamente');\n      clearMessages();\n    } catch (err: any) {\n      setError(`Error al exportar: ${err.message}`);\n      clearMessages();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      {/* Modern Header with Glass Effect */}\n      <div className=\"sticky top-0 z-50 backdrop-blur-xl bg-white/80 dark:bg-gray-900/80 border-b border-gray-200/20 dark:border-gray-700/20\">\n        <div className=\"max-w-7xl mx-auto px-6 py-8\">\n          <div className=\"text-center\">\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl mb-4 shadow-lg\">\n              <TrendingUp className=\"h-8 w-8 text-white\" />\n            </div>\n            <h1 className=\"text-5xl font-bold bg-gradient-to-r from-gray-900 via-blue-800 to-purple-800 dark:from-white dark:via-blue-200 dark:to-purple-200 bg-clip-text text-transparent mb-3\">\n              Inventory Performance\n            </h1>\n            <p className=\"text-xl text-gray-600 dark:text-gray-300 font-medium\">\n              Análisis inteligente de inventario con IA\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content with Modern Layout */}\n      <div className=\"max-w-7xl mx-auto px-6 py-12 space-y-12\">\n        {/* Messages */}\n        {error && (\n          <Alert variant=\"destructive\">\n            <AlertDescription>{error}</AlertDescription>\n          </Alert>\n        )}\n\n        {success && (\n          <Alert className=\"border-green-200 bg-green-50 text-green-800 dark:border-green-800 dark:bg-green-950 dark:text-green-200\">\n            <AlertDescription>{success}</AlertDescription>\n          </Alert>\n        )}\n\n        {/* File Upload Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* XLSX Template Upload */}\n          <div className=\"lg:col-span-3\">\n            <FileUploader\n              fileType=\"both\"\n              multiple={false}\n              onFileLoaded={handleTemplateUpload}\n              label=\"Cargar Plantilla\"\n              description=\"Sube la plantilla principal (XLSX o CSV) con los datos de productos\"\n              loading={loading.template}\n            />\n          </div>\n\n          {/* Day One Upload */}\n          <div className=\"lg:col-span-1\">\n            <FileUploader\n              fileType=\"both\"\n              multiple={true}\n              expectedCount={6}\n              onFileLoaded={(files) => handleDayOneUpload(files as File[])}\n              label=\"Inventarios Día 1\"\n              description=\"6 archivos CSV/XLSX del inventario del día 1 de cada mes\"\n              loading={loading.dayOne}\n            />\n          </div>\n\n          {/* Closure Upload */}\n          <div className=\"lg:col-span-1\">\n            <FileUploader\n              fileType=\"both\"\n              multiple={true}\n              expectedCount={6}\n              onFileLoaded={(files) => handleClosureUpload(files as File[])}\n              label=\"Inventarios Cierre\"\n              description=\"6 archivos CSV/XLSX del inventario de cierre\"\n              loading={loading.closure}\n            />\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"lg:col-span-1 flex flex-col gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Calculator className=\"h-5 w-5\" />\n                  Acciones\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <Button\n                  onClick={handleGeneratePreview}\n                  disabled={loading.previewing || templateData.length === 0}\n                  variant=\"secondary\"\n                  className=\"w-full\"\n                >\n                  {loading.previewing ? 'Generando...' : 'Vista Previa (10 productos)'}\n                </Button>\n\n                <Button\n                  onClick={handleCalculateReplenishment}\n                  disabled={loading.calculating || templateData.length === 0 || csvDayOneData.length !== 6 || csvClosureData.length !== 6}\n                  className=\"w-full\"\n                >\n                  {loading.calculating ? 'Calculando...' : 'Calcular Reposición Completa'}\n                </Button>\n                \n                <Button\n                  onClick={handleExportResults}\n                  disabled={calculatedResults.length === 0}\n                  variant=\"outline\"\n                  className=\"w-full\"\n                >\n                  Exportar a XLSX\n                </Button>\n              </CardContent>\n            </Card>\n\n            {/* Status Card */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <TrendingUp className=\"h-5 w-5\" />\n                  Estado\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Plantilla:</span>\n                  <span className={templateData.length > 0 ? 'text-green-600' : 'text-slate-400'}>\n                    {templateData.length > 0 ? `${templateData.length} productos` : 'No cargada'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>CSV Día 1:</span>\n                  <span className={csvDayOneData.length === 6 ? 'text-green-600' : 'text-slate-400'}>\n                    {csvDayOneData.length}/6 archivos\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>CSV Cierre:</span>\n                  <span className={csvClosureData.length === 6 ? 'text-green-600' : 'text-slate-400'}>\n                    {csvClosureData.length}/6 archivos\n                  </span>\n                </div>\n                <Separator />\n                <div className=\"flex justify-between font-medium\">\n                  <span>Resultados:</span>\n                  <span className={calculatedResults.length > 0 ? 'text-blue-600' : 'text-slate-400'}>\n                    {calculatedResults.length > 0 ? `${calculatedResults.length} calculados` : 'Pendiente'}\n                  </span>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Data Visualization */}\n        <div className=\"space-y-6\">\n          {calculatedResults.length > 0 ? (\n            <DataVisualizer\n              data={calculatedResults}\n              title=\"Resultados Completos de Reposición\"\n              description=\"Análisis completo con fechas de reposición y prioridades para todos los productos\"\n              onExport={handleExportResults}\n              loading={loading.calculating}\n              type=\"results\"\n            />\n          ) : showPreview && previewResults.length > 0 ? (\n            <DataVisualizer\n              data={previewResults}\n              title=\"Vista Previa de Resultados\"\n              description=\"Muestra de los primeros 10 productos con cálculos de reposición\"\n              loading={loading.previewing}\n              type=\"results\"\n            />\n          ) : templateData.length > 0 ? (\n            <DataVisualizer\n              data={templateData}\n              title=\"Vista Previa de la Plantilla\"\n              description=\"Datos cargados desde la plantilla XLSX\"\n              loading={loading.template}\n              type=\"template\"\n            />\n          ) : (\n            <Card>\n              <CardContent className=\"text-center py-12\">\n                <FileSpreadsheet className=\"h-16 w-16 text-slate-300 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-slate-900 dark:text-white mb-2\">\n                  Comienza cargando tu plantilla\n                </h3>\n                <p className=\"text-slate-600 dark:text-slate-400\">\n                  Sube la plantilla XLSX para comenzar el análisis de inventario\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}